//https://leetcode.com/problems/implement-strstr/
// APPROACH-1:   BRUTE FORCE










// APPROACH-2:   BETTER

class Solution {
    public int strStr(String haystack, String needle) {
        if(needle.equals("")){  // If empty sub string is given then we need to return 0
            return 0;
        }
        int n=haystack.length();
        int m=needle.length();
        for(int i=0;i<n-m+1;i++){  // for each index of haystack string  && ignoring last substring of length <=m-1
           for(int j=0;j<m;j++){  // consider sub string of haystack of length m 
               if(haystack.charAt(i+j)!=needle.charAt(j)){  // and check each character
                   break;      // breaks from j loop--> goes to next i value
               }
               if(j==m-1){   // whole needle substring has compared with a substring of haystack and no where they are mismatched by character.. so just return i.
                   return i; // return the value of i, i.e index at which 1st ouccarance of needle string had occured
               }
           } 
        }
        return -1;  // return -1 since no where we found needle as substring of haystack
        
    }
}

TIME COMPLEXITY : O(n*m)
SPACE COMPLEXITY : O(1)














// APPROACH-3:   OPTIMAL
