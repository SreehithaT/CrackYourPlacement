// https://leetcode.com/problems/maximum-product-of-three-numbers/
Approach 1: TC:O(N)    SC:O(1)
class Solution {
    public int maximumProduct(int[] nums) {
        int n=nums.length;
        int max1=Integer.MIN_VALUE;
        int max2=Integer.MIN_VALUE;
        int max3=Integer.MIN_VALUE;
        int min1=Integer.MAX_VALUE;
        int min2=Integer.MAX_VALUE;
        for(int i : nums){
            if(i>max1){
                max3=max2;
                max2=max1;
                max1=i;   
            }
            else if(i>max2){
                max3=max2;
                max2=i;
            }
            else if(i>max3){
                max3=i;
            }
            if(i<min1){
                min2=min1;
                min1=i;
            }
            else if(i<min2){
                min2=i;
            }
        }
        int res1=min1*min2*max1;
        int res=max1*max2*max3;
        return Math.max(res,res1);
        
    }
}

Approach 2: TC:O(NlogN)   SC:O(1)
class Solution {
    public int maximumProduct(int[] nums) {
        Arrays.sort(nums);
        int n=nums.length;
        int res1=nums[0]*nums[1]*nums[n-1];
        int res=nums[n-1]*nums[n-2]*nums[n-3];
        return Math.max(res,res1);
        
    }
}
